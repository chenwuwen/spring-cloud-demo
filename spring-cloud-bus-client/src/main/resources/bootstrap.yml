eureka:
  instance:
    environment: [test]
    # 心跳时间，即服务续约间隔时间（缺省为30s）
    lease-renewal-interval-in-seconds: 5
    # 发呆时间，即服务续约到期时间（缺省为90s）
    lease-expiration-duration-in-seconds: 10
    hostname: localhost

  client:
    service-url:
      defaultZone: http://kanyun:kanyun1234@localhost:8001/eureka
    healthcheck:
      # 开启健康检查（依赖spring-boot-starter-actuator）
      enabled: true

spring:
  cloud:
    # 配置服务器的地址
    config:
      # 如果需要使用服务名来访问配置中心,需要如下discovery的配置.同时Eureka配置也应该移入bootstrap.yml中
      uri: http://spring-cloud-bus-server
      #uri: http://localhost:9000
      # 要读取配置文件读取的值.此值,跟 application.yml中的application.name的值相等,该配置+下面的profile配置,共同组成了,配置仓库中配置文件的名字
      name: spring-cloud-config-client
      # 如果不设置此值，则系统设置此值为 spring.profiles.active
      profile: dev
      # 可以使用之前的版本。默认值可以是git label, branch name or commit id。可以使用多个Label，多个Label可以使用逗号分隔
      # label:
      # true: 如果访问配置中心失败，则停止启动服务
      fail-fast: true
      # 配置重试，默认是重试6次，最初是延迟1s再次重试，如果再失败，则延迟1.1*1s、1.1*1.1*1s、… 。可以使用这个配置
      retry:
        initial-interval: 2000
        # 最多重试次数
        max-attempts: 6
        # 最大重试间隔
        max-interval: 4000
        # 每次重试时间是之前的倍数
        multiplier: 1.2
      # 如果需要使用服务名来访问配置中心,需要如下配置.同时Eureka配置也应该移入bootstrap.yml中
      discovery:
        # 启动服务发现的功能，开启了才能调用其它服务
        enabled: true
        # 此Id是配置中心服务的InstanceId
        service-id: spring-cloud-bus-server

      stream:
        kafka:
          binder:
            zk-nodes: localhost:2181
            brokers: localhost:9092
        bus:
          enabled: true